{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "replication": {
            "type": "object",
            "properties": {
                "class": { "enum": [ "SimpleStrategy", "NetworkTopologyStrategy" ] },
                "replication_factor": { "type": "integer", "minimum": 0 },
                "data_centers": {
                    "type": "array",
                    "items": {
                      "allOf": [ { 
                        "type": "object",
                        "required": [ "name", "replication_factor" ],
                        "properties": {
                          "name": { "type": "string" },
                          "replication_factor": { "type": "integer", "minimum": 0 }
                        }
                      } ]
                    }
                  }
            },
            "if": {
                "properties": { "class": { "const": "SimpleStrategy" } }
            },
            "then": {
                "not": { "required": [ "data_centers" ] },
                "required": [ "class", "replication_factor" ] 
            },
            "else": {
                "not": { "required": [ "replication_factor" ] },
                "required": [ "class", "data_centers" ]
            }
        },
        "table": {
            "type": "object",
            "required": [ "name" ],
            "additionalProperties": false,
            "properties": {
                "additional_write_policy": {
                    "type": "string",
                    "pattern": "(?:^|(?<= ))(ALWAYS|NONE|\\d{1,3}PERCENTILE|\\d+ms)(?:(?= )|$)"
                },
                "bloom_filter_fp_chance": {
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 1.0
                },
                "caching": {
                    "type": "object",
                    "properties": {
                        "keys": { "enum": [ "ALL", "NONE" ] },
                        "rows_per_partition": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "minimum": 2
                                }, 
                                {
                                    "enum": [ "ALL", "NONE" ]
                                }
                            ]
                        }
                    },
                    "required": [ "keys", "rows_per_partition" ]
                },
                "cdc": { "type": ["boolean", "null"] },
                "comment": { "type": "string" },
                "compaction": {
                    "type": "object",
                    "properties": {
                        "class": {
                            "enum": [ 
                                "SizeTieredCompactionStrategy",
                                "DateTieredCompactionStrategy",
                                "TimeWindowCompactionStrategy",
                                "LeveledCompactionStrategy"
                            ]
                        }
                    }
                },
                "compression" : {
                    "type": "object",
                    "properties": {
                        "class": {
                            "enum": [ "LZ4Compressor", "SnappyCompressor", "DeflateCompressor" ]
                        },
                        "chunk_length_kb": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "sstable_compression": {
                            "type": "string"
                        }
                    }
                },
                "crc_check_chance": {
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 1.0
                },
                "dclocal_read_repair_chance": { "type": "number" },
                "default_time_to_live": {
                    "type": "integer",
                    "minimum": 0
                },
                "extensions": { "type": "object" },
                "flags": { "type": "array" },
                "gc_grace_seconds": {
                    "type": "integer",
                    "minimum": 0
                },
                "id": { "type": "string" },
                "memtable_flush_period_in_ms": {
                    "type": "integer",
                    "minimum": 0
                },
                "min_index_interval": {
                    "type": "integer"
                },
                "max_index_interval": {
                    "type": "integer"
                },
                "name": { "type": "string" },
                "read_repair": {
                    "type": "string",
                    "pattern": "(?:^|(?<= ))(NONE|BLOCKING)(?:(?= )|$)"
                },
                "read_repair_chance": { "type": "number" },
                "speculative_retry": {
                    "type": "string",
                    "pattern": "(?:^|(?<= ))(ALWAYS|NONE|\\d{1,3}PERCENTILE|\\d+ms)(?:(?= )|$)"
                }
            },
            "if": {
                "properties": { "class": { "const": "SizeTieredCompactionStrategy" } }
            },
            "then": {
                "not": { "required": [ "data_centers" ] },
                "properties": {
                    "bucket_high": {
                        "type": "number",
                        "minimum": 0.0
                    },
                    "bucket_low": {
                        "type": "number",
                        "minimum": 0.0
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "max_threshold": {
                        "type": "integer"
                    },
                    "min_threshold": {
                        "type": "integer"
                    },
                    "min_sstable_size": {
                        "type": "integer"
                    },
                    "only_purge_repaired_tombstones": {
                        "type": "boolean"
                    },
                    "tombstone_compaction_interval": {
                        "description": "The minimum number of seconds after which an SSTable is created before Cassandra considers the SSTable for tombstone compaction.",
                        "type": "integer",
                        "minimum": 0
                    },
                    "tombstone_threshold": {
                        "type": "number",
                        "minimum": 0.0
                    },
                    "unchecked_tombstone_compaction": {
                        "type": "boolean"
                    }
                }
            },
            "else": {
                "if": {
                    "properties": { "class": { "const": "DateTieredCompactionStrategy" } }
                },
                "then": {
                    "properties": {
                        "base_time_seconds": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "max_window_size_seconds": {
                            "type": "integer"
                        },
                        "max_threshold": {
                            "type": "integer"
                        },
                        "min_threshold": {
                            "type": "integer"
                        },
                        "timestamp_resolution": {
                            "enum": [ "MICROSECONDS", "MILLISECONDS" ]
                        },
                        "tombstone_compaction_interval": {
                            "description": "The minimum number of seconds after which an SSTable is created before Cassandra considers the SSTable for tombstone compaction.",
                            "type": "integer",
                            "minimum": 0
                        },
                        "tombstone_threshold": {
                            "type": "number",
                            "minimum": 0.0
                        },
                        "unchecked_tombstone_compaction": {
                            "type": "boolean"
                        }
                    }
                },
                "else": {
                    "if": {
                        "properties": { "class": { "const": "TimeWindowCompactionStrategy" } }
                    },
                    "then": {
                        "properties": {
                            "compaction_window_unit": {
                                "enum": [ "MILISECONDS", "SECONDS", "HOURS" ]
                            },
                            "compaction_window_size": {
                                "type": "integer"
                            }
                        }
                    },
                    "else": {
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "sstable_size_in_mb": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "tombstone_compaction_interval": {
                                "description": "The minimum number of seconds after which an SSTable is created before Cassandra considers the SSTable for tombstone compaction.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "tombstone_threshold": {
                                "type": "number",
                                "minimum": 0.0
                            },
                            "unchecked_tombstone_compaction": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }

        },
        "keyspace": {
            "type": "object",
            "required": [ "name",  "replication", "tables" ],
            "properties": {
                "name": { "type": "string" },
                "replication": { "$ref": "#definitions/replication" },
                "durable_writes": { "type": "boolean" },
                "tables": {
                    "type": "array",
                    "minLength": 1,
                    "items": {
                        "allOf": [ { "$ref" : "#definitions/table" } ]
                    }
                }
            }
        }
    },
    "type": "object",
    "properties": {
      "keyspaces": {
        "type": "array",
        "minItems": 1,
        "items": {
          "allOf": [ { "$ref": "#definitions/keyspace" } ]
        }
      }
    },
    "required": [ "keyspaces" ],
    "additionalProperties": false
}
